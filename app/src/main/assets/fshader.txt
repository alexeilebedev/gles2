precision highp float;
uniform mat4 uMVPMatrix;

// c: h,s,v
vec3 hsv2rgb(vec3 c) {
  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
	vec2 p = (uMVPMatrix * vec4(gl_PointCoord,0,1)).xy;
	vec2 c = p;
	vec3 color = vec3(0.0,0.0,0.0);
	int niter=100;
	for(int i=0; i < niter; i++){
		p= vec2(p.x*p.x-p.y*p.y,2.0*p.x*p.y)+c;
		if (dot(p,p)>4.0){
			float f = 1.f - float(i)/float(niter);
			vec3 hsv;
			hsv.x=cos(p.x);
			hsv.y=0.5f;
			hsv.z=1.f;
			color = vec3(f,f,f);//mix(hsv2rgb(hsv), vec3(f,f,f), 0.8);
			break;
		}
	}
	gl_FragColor.rgb = color;
	gl_FragColor.a = 1.0;
}
